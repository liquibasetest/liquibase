CREATE OR REPLACE PROCEDURE CREATE_EXTERNAL_TABLE(TABLE_NAME VARCHAR, DIRECTORY_PATH VARCHAR, FILE_NAME VARCHAR)
  RETURNS STRING
  LANGUAGE JAVASCRIPT
  EXECUTE AS CALLER
AS
$$
var location = '@mystage/' + DIRECTORY_PATH + '/' + FILE_NAME; // Constructing the full location path including filename

var sql_statement = `
CREATE EXTERNAL TABLE ${TABLE_NAME}
  USING TEMPLATE (
    SELECT ARRAY_AGG(OBJECT_CONSTRUCT('COLUMN_NAME',COLUMN_NAME, 'TYPE',TYPE, 'NULLABLE', NULLABLE, 'EXPRESSION',EXPRESSION))
    FROM TABLE(
      INFER_SCHEMA(
        LOCATION=>'${location}',
        FILE_FORMAT=>'my_parquet_format'
      )
    )
  )
  LOCATION='${location}'
  FILE_FORMAT=my_parquet_format
  AUTO_REFRESH=false;
`;

// Execute the SQL statement
var stmt = snowflake.createStatement({sqlText: sql_statement});
stmt.execute();

// Alter table to add partition by partition_dt extracted from metadata$filename
var alter_sql_statement = `
ALTER TABLE ${TABLE_NAME} ADD COLUMN partition_dt STRING AS split(split(split(metadata$filename, '/')[6], '_')[5], '=')[1];
ALTER TABLE ${TABLE_NAME} SET PARTITION = (partition_dt);
`;

var alter_stmt = snowflake.createStatement({sqlText: alter_sql_statement});
alter_stmt.execute();

// Get the DDL of the table
var ddl_stmt = snowflake.createStatement({sqlText: "SELECT GET_DDL('TABLE', '" + TABLE_NAME + "')"});
var ddl_result = ddl_stmt.execute();
ddl_result.next();
var ddl = ddl_result.getColumnValue(1);

return ddl;
$$;
