import boto3
from pyarrow import fs
from iceberg.api.types import Types
from iceberg.api import IcebergTable
from iceberg.api.io import FileFormat
from iceberg.aws.s3 import S3FileIO

# Initialize S3 client
s3 = boto3.client('s3')

# S3 bucket and prefix where Parquet files are stored
s3_bucket = 'your-s3-bucket'
s3_prefix = 'path/to/parquet/files'

# Read Parquet files directly from S3
parquet_files = f"s3://{s3_bucket}/{s3_prefix}"
table = pq.read_table(parquet_files)

# Define partition columns
partition_columns = ['part_yr', 'partition_date']

# Create Iceberg Table with partitioning
iceberg_path = 's3://your-iceberg-bucket/path/to/iceberg/table'
iceberg_table = IcebergTable.create(
    spec=iceberg_path,
    schema=Types.StructType(),
    format=FileFormat.PARQUET,
    partition_spec=partition_columns  # Specify partition columns here
)

# Write data from Parquet files to Iceberg table
with iceberg_table.new_append() as append:
    append.write(table)

# Commit the changes
iceberg_table.refresh()
