Table Metadata: Iceberg maintains a separate metadata file that contains information about the table's structure, partitioning scheme, data file locations, and transaction history.

Manifests: Iceberg uses manifests to track the data files associated with a table. A manifest is a list of data files along with their metadata, such as file size, checksum, and partition information.

Partitioning: Iceberg supports partitioning data based on one or more columns. This allows for efficient data pruning during query execution by skipping irrelevant partitions.

Snapshot Isolation: Iceberg provides snapshot isolation, which means that readers can safely read from a table while it is being modified by concurrent writers. This is achieved by maintaining multiple versions of the table metadata.

Transaction Support: Iceberg supports atomic, consistent, isolated, and durable (ACID) transactions for write operations, ensuring data consistency and durability.


Parquet is a popular columnar storage format in the Hadoop ecosystem. Here's how data is organized in Parquet:

Columnar Storage: Parquet stores data in a columnar format, meaning values from the same column are stored together. This allows for efficient column-wise processing, especially when only specific columns are required for analysis.

Row Groups: Data in Parquet files is divided into row groups. Each row group contains a subset of rows from the dataset. Row groups help in optimizing I/O operations, especially during read operations.

Metadata: Parquet files contain metadata that provides information about the structure of the data, such as column names, data types, and encoding techniques used.

Compression: Parquet supports various compression algorithms like Snappy, Gzip, and LZ4, which help in reducing storage space and improving query performance.
